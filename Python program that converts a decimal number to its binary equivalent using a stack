class Stack:
    def __init__(self):
        self.items = []

    def is_empty(self):
        return self.items == []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        if not self.is_empty():
            return self.items.pop()
        else:
            return None

def decimal_to_binary(decimal):
    stack = Stack()

    while decimal > 0:
        remainder = decimal % 2  # Get the remainder when divided by 2
        stack.push(remainder)  # Push the remainder onto the stack
        decimal //= 2  # Update the decimal by integer division

    binary = ""
    while not stack.is_empty():
        binary += str(stack.pop())  # Pop elements from the stack to form the binary number

    return binary if binary != "" else "0"

# Example usage:
decimal_number = 25  # Replace this with your decimal number
binary_result = decimal_to_binary(decimal_number)
print(f"The binary equivalent of {decimal_number} is {binary_result}")
